version: "3.6"
x-env: &defaults
  NODE_ENV: development
  NODE_PATH:
  DB_NAME: codeChallenge
  MONGODB_HOST: photo-sharing-mongo
  MONGODB_PASSWORD:
  MONGODB_USERNAME:
# volumes:
#   pg_data:
# networks:
#   web:
#     external: true
#   internal:
#     external: false
services:
  # web:
  #   stdin_open: true
  #   container_name: registry-web
  #   image: registry/web
  #   build:
  #     context: web/
  #     dockerfile: Dockerfile
  #   volumes:
  #     - type: bind
  #       source: ./web
  #       target: /opt/app
  #     - type: tmpfs
  #       target: /tmp
  #       tmpfs:
  #         size: 128000000
  #   ports:
  #     - 8101:8101
  #   depends_on:
  #     - api
  #   environment:
  #     PORT: 8101
  #     NODE_ENV: development
  #   command: >
  #     bash -c "npm start"
  api:
    container_name: photo-sharing-api
    image: photo-sharing/api
    build:
      context: code-challenge-back-end/
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./code-challenge-back-end
        target: /opt/app
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 128000000
    ports:
      - 8100:8100
    depends_on:
      - mongo
    environment:
      <<: *defaults
      PORT: 8100
    command: >
      bash -c "sleep 5 && npm run dev:docker"
  mongo:
    container_name: photo-sharing-mongo
    image: photo-sharing/db
    build:
      context: db/
      dockerfile: Dockerfile
    volumes:
      - type: bind
        source: ./mongo_data
        target: /var/lib/mongodb/data
      - type: bind
        source: ./db
        target: /opt/db
    ports:
      - 27017:27017
    environment: *defaults
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "psql",
    #       "-U",
    #       "${APP_DB_USER}",
    #       "-h",
    #       "localhost",
    #       "-d",
    #       "${APP_DB_NAME}",
    #       "-p",
    #       "5432",
    #       "-c",
    #       "SELECT 1 AS result FROM pg_database WHERE datname='${APP_DB_NAME}'",
    #     ]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

